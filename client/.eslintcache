[{"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\index.js":"1","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\reportWebVitals.js":"2","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\App.js":"3","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\pages\\SingleThought.js":"4","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\pages\\Profile.js":"5","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\pages\\Home.js":"6","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\pages\\Signup.js":"7","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\pages\\Login.js":"8","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\Header\\index.js":"9","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\Footer\\index.js":"10","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\utils\\mutations.js":"11","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\utils\\auth.js":"12","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\utils\\queries.js":"13","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\ThoughtList\\index.js":"14","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\CommentForm\\index.js":"15","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\CommentList\\index.js":"16","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\ThoughtForm\\index.js":"17","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\Tile\\index.js":"18"},{"size":543,"mtime":1643176585637,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1643176585802,"results":"21","hashOfConfig":"20"},{"size":2367,"mtime":1643176585533,"results":"22","hashOfConfig":"20"},{"size":1677,"mtime":1643176585800,"results":"23","hashOfConfig":"20"},{"size":1724,"mtime":1643176585796,"results":"24","hashOfConfig":"20"},{"size":942,"mtime":1643176585792,"results":"25","hashOfConfig":"20"},{"size":4423,"mtime":1643176585798,"results":"26","hashOfConfig":"20"},{"size":4807,"mtime":1643176585794,"results":"27","hashOfConfig":"20"},{"size":1776,"mtime":1643176585552,"results":"28","hashOfConfig":"20"},{"size":891,"mtime":1643176585547,"results":"29","hashOfConfig":"20"},{"size":1077,"mtime":1643176585902,"results":"30","hashOfConfig":"20"},{"size":1043,"mtime":1643176585898,"results":"31","hashOfConfig":"20"},{"size":908,"mtime":1643176585905,"results":"32","hashOfConfig":"20"},{"size":787,"mtime":1643176585561,"results":"33","hashOfConfig":"20"},{"size":2397,"mtime":1643176585539,"results":"34","hashOfConfig":"20"},{"size":953,"mtime":1643176585543,"results":"35","hashOfConfig":"20"},{"size":3067,"mtime":1643176585556,"results":"36","hashOfConfig":"20"},{"size":9118,"mtime":1643176585566,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fu9uq3",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\index.js",[],"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\reportWebVitals.js",[],"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\App.js",[],"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\pages\\SingleThought.js",["80","81","82","83","84","85"],"import React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport CommentList from '../components/CommentList';\nimport CommentForm from '../components/CommentForm';\n\nimport { QUERY_SINGLE_THOUGHT } from '../utils/queries';\nimport { Button, Icon, Image, Modal } from 'semantic-ui-react'\n\n\n\n\nconst SingleThought = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const { thoughtId } = useParams();\n  const [open, setOpen] = React.useState(false)\n\n  const { loading, data } = useQuery(QUERY_SINGLE_THOUGHT, {\n    // pass URL parameter\n    variables: { thoughtId: thoughtId },\n  });\n\n  const thought = data?.thought || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n\n    <div className=\"my-3\">\n      <h3 className=\"card-header bg-dark text-light p-2 m-0\">\n        {thought.thoughtAuthor} <br />\n        <span style={{ fontSize: '1rem' }}>\n          had this thought on {thought.createdAt}\n        </span>\n      </h3>\n      <div className=\"bg-light py-4\">\n        <blockquote\n          className=\"p-4\"\n          style={{\n            fontSize: '1.5rem',\n            fontStyle: 'italic',\n            border: '2px dotted #1a1a1a',\n            lineHeight: '1.5',\n          }}\n        >\n          {thought.thoughtText}\n        </blockquote>\n      </div>\n\n      <div className=\"my-5\">\n        <CommentList comments={thought.comments} />\n      </div>\n      <div className=\"m-3 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n        <CommentForm thoughtId={thought._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleThought;\n","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\pages\\Profile.js",[],"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\pages\\Home.js",["86"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ThoughtList from '../components/ThoughtList';\n// import ThoughtForm from '../components/ThoughtForm';\n\nimport { QUERY_THOUGHTS } from '../utils/queries';\nimport { Grid } from 'semantic-ui-react'\n// import Tile from '../components/Tile';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\n  const thoughts = data?.thoughts || [];\n\n  return (\n    <main>\n      {/* \n      <Grid >\n        <Grid.Row columns={3}> */}\n\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <ThoughtList\n          thoughts={thoughts}\n        // title=\"Some Feed for Thought(s)...\"\n        />\n      )}\n\n      {/* </Grid.Row>\n      </Grid > */}\n\n    </main>\n  );\n};\n\nexport default Home;\n\n\n/* <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          <ThoughtForm />\n        </div> */","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\pages\\Signup.js",[],"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\pages\\Login.js",[],"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\Header\\index.js",["87"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport userimg from '../../images/millie.JPG'\nimport Auth from '../../utils/auth';\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"mb-4 py-3 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <div>\n          <Link className=\"text-main\" to=\"/\">\n            <h1 className=\"m-0 meet-font\">Meet ME</h1>\n          </Link>\n          <p className=\"m-0 text-light\">Share the things you love as a Brand Ambassador</p>\n        </div>\n\n        <div>\n\n          {Auth.loggedIn() ? (\n            <div className='display-flex'>\n              <div>\n                <Icon size='large' color='#ff889c' name='add circle' style={{ cursor: 'pointer' }}></Icon>\n              </div>\n              <Link className=\"text-main\" to=\"/me\" style={{ cursor: 'pointer' }}>\n                <div className=\"content\">\n                  <img className=\"ui avatar image\" src={userimg} alt=\"user\"></img>{Auth.getProfile().data.username}\n                </div>\n              </Link>\n\n              <p className=\"text-main\" style={{ cursor: 'pointer' }} onClick={logout}>\n                Logout\n              </p>\n            </div>\n          ) : (\n            <>\n              {/* <Link className=\"btn mainColor btn-lg btn-info m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn subColor  btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link> */}\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n\n\n\n","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\Footer\\index.js",[],"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\utils\\mutations.js",[],"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\utils\\auth.js",[],"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\utils\\queries.js",[],"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\ThoughtList\\index.js",[],"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\CommentForm\\index.js",["88"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${characterCount === 280 || error ? 'text-danger' : ''\n              }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\CommentList\\index.js",[],"E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\ThoughtForm\\index.js",["89"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${characterCount === 280 || error ? 'text-danger' : ''\n              }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","E:\\Kartiki\\Training\\UWBootcamp\\GitHub\\TeamProject3\\Milli\\04\\insta\\client\\src\\components\\Tile\\index.js",["90","91","92","93","94"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport millie from '../../images/millie.JPG'\nimport im2 from '../../images/im1.png'\nimport lisa from '../../images/lisa.png'\n\nimport { Card, Icon, Image, Button, Modal, Input, Comment, Form, Header } from 'semantic-ui-react'\n\n\nfunction Tile({ thought, showUsername }) {\n    const [open, setOpen] = React.useState(false)\n    return (\n\n        <Card key={thought._id}>\n            <Card.Content>\n                <Image className=\"ui avatar image\" src={millie} wrapped ui={false} />User Name\n            </Card.Content>\n            <Image src={im2} wrapped ui={false} />\n            <Card.Content extra>\n                <span className=\"right floated\">\n                    <a>\n                        <Icon name='like' />100\n                    </a>\n                </span>\n                <Modal\n                    closeIcon\n                    open={open}\n                    onClose={() => setOpen(false)}\n                    onOpen={() => setOpen(true)}\n                    trigger={\n                        <a>\n                            {/* <Link className=\"submit button\" > */}\n                            <Icon name='comment' style={{ cursor: 'pointer' }} />20\n                            {/* </Link> */}\n                        </a>}\n\n                >\n                    <Modal.Header ><Image className=\"ui avatar image mr-3\" src={millie} wrapped ui={false} />Lisa</Modal.Header>\n                    <Modal.Content image scrolling>\n                        <Image size='large' src={lisa} wrapped />\n                        <Modal.Description>\n                            <p>\n                                This is an example of expanded content that will cause the modal's\n                                dimmer to scroll.\n                            </p>\n                            <Comment.Group>\n                                <Header as='h3' dividing>\n                                    Comments\n                                </Header>\n\n                                <Comment>\n                                    <Comment.Avatar src='/images/avatar/small/matt.jpg' />\n                                    <Comment.Content>\n                                        <Comment.Author as='a'>Matt</Comment.Author>\n                                        <Comment.Metadata>\n                                            <div>Today at 5:42PM</div>\n                                        </Comment.Metadata>\n                                        <Comment.Text>How artistic!</Comment.Text>\n                                        <Comment.Actions>\n                                            <Comment.Action>Reply</Comment.Action>\n                                        </Comment.Actions>\n                                    </Comment.Content>\n                                </Comment>\n                                <Comment>\n                                    <Comment.Avatar src='/images/avatar/small/joe.jpg' />\n                                    <Comment.Content>\n                                        <Comment.Author as='a'>Joe Henderson</Comment.Author>\n                                        <Comment.Metadata>\n                                            <div>5 days ago</div>\n                                        </Comment.Metadata>\n                                        <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\n                                        <Comment.Actions>\n                                            <Comment.Action>Reply</Comment.Action>\n                                        </Comment.Actions>\n                                    </Comment.Content>\n                                </Comment>\n                                <Comment>\n                                    <Comment.Avatar src='/images/avatar/small/joe.jpg' />\n                                    <Comment.Content>\n                                        <Comment.Author as='a'>Joe Henderson</Comment.Author>\n                                        <Comment.Metadata>\n                                            <div>5 days ago</div>\n                                        </Comment.Metadata>\n                                        <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\n                                        <Comment.Actions>\n                                            <Comment.Action>Reply</Comment.Action>\n                                        </Comment.Actions>\n                                    </Comment.Content>\n                                </Comment>\n                                <Comment>\n                                    <Comment.Avatar src='/images/avatar/small/joe.jpg' />\n                                    <Comment.Content>\n                                        <Comment.Author as='a'>Joe Henderson</Comment.Author>\n                                        <Comment.Metadata>\n                                            <div>5 days ago</div>\n                                        </Comment.Metadata>\n                                        <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\n                                        <Comment.Actions>\n                                            <Comment.Action>Reply</Comment.Action>\n                                        </Comment.Actions>\n                                    </Comment.Content>\n                                </Comment>\n                                <Comment>\n                                    <Comment.Avatar src='/images/avatar/small/joe.jpg' />\n                                    <Comment.Content>\n                                        <Comment.Author as='a'>Joe Henderson</Comment.Author>\n                                        <Comment.Metadata>\n                                            <div>5 days ago</div>\n                                        </Comment.Metadata>\n                                        <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\n                                        <Comment.Actions>\n                                            <Comment.Action>Reply</Comment.Action>\n                                        </Comment.Actions>\n                                    </Comment.Content>\n                                </Comment>\n                                <Comment>\n                                    <Comment.Avatar src='/images/avatar/small/joe.jpg' />\n                                    <Comment.Content>\n                                        <Comment.Author as='a'>Joe Henderson</Comment.Author>\n                                        <Comment.Metadata>\n                                            <div>5 days ago</div>\n                                        </Comment.Metadata>\n                                        <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\n                                        <Comment.Actions>\n                                            <Comment.Action>Reply</Comment.Action>\n                                        </Comment.Actions>\n                                    </Comment.Content>\n                                </Comment>\n\n\n                            </Comment.Group>\n\n\n                        </Modal.Description>\n                        {/* \n                        <Modal.Content extra>\n                            <div className=\"ui large transparent left icon input\">\n                                <Input icon='comments outline' iconPosition='left' placeholder='Add a comment...' />\n                            </div>\n                        </Modal.Content> */}\n\n\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Form reply>\n                            <Form.TextArea />\n                            <Button content='Add Reply' labelPosition='left' icon='edit' primary />\n                        </Form>\n                        {/* <Button onClick={() => setOpen(false)} primary style={{ cursor: 'pointer' }}>\n                            Proceed <Icon name='chevron right' />\n                        </Button> */}\n                    </Modal.Actions>\n                </Modal>\n\n            </Card.Content>\n\n\n\n        </Card >\n\n\n    )\n}\n\nexport default Tile\n\n/* <div className=\"right floated meta\">\n                {showUsername ? (\n                    <Link\n                        className=\"text-light\"\n                        to={`/profiles/${thought.thoughtAuthor}`}\n                    >\n                        {thought.thoughtAuthor} <br />\n                        <span style={{ fontSize: '1rem' }}>\n                            had this thought on {thought.createdAt}\n                        </span>\n                    </Link>\n                ) : (\n                    <>\n                        <span style={{ fontSize: '1rem' }}>\n                            You had this thought on {thought.createdAt}\n                        </span>\n                    </>\n                )}\n            </div> */\n\n\n\n            // to=\"/thoughts/:thoughtId\"",{"ruleId":"95","severity":1,"message":"96","line":11,"column":10,"nodeType":"97","messageId":"98","endLine":11,"endColumn":16},{"ruleId":"95","severity":1,"message":"99","line":11,"column":18,"nodeType":"97","messageId":"98","endLine":11,"endColumn":22},{"ruleId":"95","severity":1,"message":"100","line":11,"column":24,"nodeType":"97","messageId":"98","endLine":11,"endColumn":29},{"ruleId":"95","severity":1,"message":"101","line":11,"column":31,"nodeType":"97","messageId":"98","endLine":11,"endColumn":36},{"ruleId":"95","severity":1,"message":"102","line":19,"column":10,"nodeType":"97","messageId":"98","endLine":19,"endColumn":14},{"ruleId":"95","severity":1,"message":"103","line":19,"column":16,"nodeType":"97","messageId":"98","endLine":19,"endColumn":23},{"ruleId":"95","severity":1,"message":"104","line":8,"column":10,"nodeType":"97","messageId":"98","endLine":8,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":16},{"ruleId":"95","severity":1,"message":"105","line":19,"column":15,"nodeType":"97","messageId":"98","endLine":19,"endColumn":19},{"ruleId":"95","severity":1,"message":"105","line":41,"column":15,"nodeType":"97","messageId":"98","endLine":41,"endColumn":19},{"ruleId":"95","severity":1,"message":"106","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"107","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"108","line":7,"column":44,"nodeType":"97","messageId":"98","endLine":7,"endColumn":49},{"ruleId":"109","severity":1,"message":"110","line":21,"column":21,"nodeType":"111","endLine":21,"endColumn":24},{"ruleId":"109","severity":1,"message":"110","line":31,"column":25,"nodeType":"111","endLine":31,"endColumn":28},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'Image' is defined but never used.","'Modal' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'Grid' is defined but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'Input' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]