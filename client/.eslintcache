[{"/Users/MT/Desktop/main 2/insta/client/src/index.js":"1","/Users/MT/Desktop/main 2/insta/client/src/App.js":"2","/Users/MT/Desktop/main 2/insta/client/src/reportWebVitals.js":"3","/Users/MT/Desktop/main 2/insta/client/src/pages/Signup.js":"4","/Users/MT/Desktop/main 2/insta/client/src/pages/Profile.js":"5","/Users/MT/Desktop/main 2/insta/client/src/pages/Home.js":"6","/Users/MT/Desktop/main 2/insta/client/src/pages/Login.js":"7","/Users/MT/Desktop/main 2/insta/client/src/pages/SingleThought.js":"8","/Users/MT/Desktop/main 2/insta/client/src/components/Header/index.js":"9","/Users/MT/Desktop/main 2/insta/client/src/components/Footer/index.js":"10","/Users/MT/Desktop/main 2/insta/client/src/utils/mutations.js":"11","/Users/MT/Desktop/main 2/insta/client/src/utils/auth.js":"12","/Users/MT/Desktop/main 2/insta/client/src/utils/queries.js":"13","/Users/MT/Desktop/main 2/insta/client/src/components/CommentForm/index.js":"14","/Users/MT/Desktop/main 2/insta/client/src/components/ThoughtForm/index.js":"15","/Users/MT/Desktop/main 2/insta/client/src/components/ThoughtList/index.js":"16","/Users/MT/Desktop/main 2/insta/client/src/components/CommentList/index.js":"17","/Users/MT/Desktop/main 2/insta/client/src/components/Tile/index.js":"18"},{"size":543,"mtime":1642895035867,"results":"19","hashOfConfig":"20"},{"size":2367,"mtime":1642895036334,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1642889569734,"results":"22","hashOfConfig":"20"},{"size":4427,"mtime":1643175820688,"results":"23","hashOfConfig":"20"},{"size":1724,"mtime":1642895034399,"results":"24","hashOfConfig":"20"},{"size":945,"mtime":1643255992503,"results":"25","hashOfConfig":"20"},{"size":4807,"mtime":1642991176280,"results":"26","hashOfConfig":"20"},{"size":1683,"mtime":1643255977965,"results":"27","hashOfConfig":"20"},{"size":3552,"mtime":1643434510177,"results":"28","hashOfConfig":"20"},{"size":895,"mtime":1643434511058,"results":"29","hashOfConfig":"20"},{"size":1077,"mtime":1642895037698,"results":"30","hashOfConfig":"20"},{"size":1043,"mtime":1642895037244,"results":"31","hashOfConfig":"20"},{"size":908,"mtime":1642895036780,"results":"32","hashOfConfig":"20"},{"size":2397,"mtime":1642895038649,"results":"33","hashOfConfig":"20"},{"size":4426,"mtime":1643265859415,"results":"34","hashOfConfig":"20"},{"size":798,"mtime":1643435285935,"results":"35","hashOfConfig":"20"},{"size":953,"mtime":1643086044773,"results":"36","hashOfConfig":"20"},{"size":6333,"mtime":1643435282699,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"7cymtr",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/MT/Desktop/main 2/insta/client/src/index.js",[],["77","78"],"/Users/MT/Desktop/main 2/insta/client/src/App.js",[],"/Users/MT/Desktop/main 2/insta/client/src/reportWebVitals.js",[],"/Users/MT/Desktop/main 2/insta/client/src/pages/Signup.js",[],"/Users/MT/Desktop/main 2/insta/client/src/pages/Profile.js",[],"/Users/MT/Desktop/main 2/insta/client/src/pages/Home.js",[],"/Users/MT/Desktop/main 2/insta/client/src/pages/Login.js",[],"/Users/MT/Desktop/main 2/insta/client/src/pages/SingleThought.js",[],"/Users/MT/Desktop/main 2/insta/client/src/components/Header/index.js",["79","80"],"/Users/MT/Desktop/main 2/insta/client/src/components/Footer/index.js",[],"/Users/MT/Desktop/main 2/insta/client/src/utils/mutations.js",[],"/Users/MT/Desktop/main 2/insta/client/src/utils/auth.js",[],"/Users/MT/Desktop/main 2/insta/client/src/utils/queries.js",[],"/Users/MT/Desktop/main 2/insta/client/src/components/CommentForm/index.js",["81"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${characterCount === 280 || error ? 'text-danger' : ''\n              }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","/Users/MT/Desktop/main 2/insta/client/src/components/ThoughtForm/index.js",["82","83","84","85","86","87","88","89","90","91","92","93","94","95"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\nimport {\n  Dropdown, Button, Icon, Modal, Image, Input, Segment,\n  Divider, Tab, Message, Form\n} from 'semantic-ui-react'\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n\n  const fileInputRef = React.createRef();\n  const onFormSubmit = e => {\n    e.preventDefault(); // Stop form submit\n    this.fileUpload(this.state.file).then(response => {\n      console.log(response.data);\n    });\n  };\n\n  const fileChange = e => {\n    this.setState({ file: e.target.files[0] }, () => {\n      console.log(\"File chosen --->\", this.state.file);\n    });\n  };\n\n  // const fileUpload = file => {\n  //   const url = \"/some/path/to/post\";\n  //   const formData = new FormData();\n  //   formData.append(\"file\", file);\n  //   const config = {\n  //     headers: {\n  //       \"Content-type\": \"multipart/form-data\"\n  //     }\n  //   };\n  //   return put(url, formData, config);\n  // };\n\n  // const  fileExport = file => {\n  //   // handle save for export button function\n  // };\n\n  return (\n    <div>\n      {/* <h3>What's on your mind?</h3> */}\n\n      {Auth.loggedIn() ? (\n        <>\n\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12\">\n              {/* <Button\n                content=\"Choose File\"\n                labelPosition=\"left\"\n                icon=\"file\"\n              onClick={() => this.fileInputRef.current.click()}\n              /> */}\n              <Input\n                // ref={this.fileInputRef}\n                type=\"file\"\n                hidden\n                className='mainColor'\n              // onChange={this.fileChange}\n              />\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n              <p\n                className={`m-0 ${characterCount === 280 || error ? 'text-danger' : ''\n                  }`}\n              >\n                Character Count: {characterCount}/280\n              </p>\n            </div>\n\n            {/* <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div> */}\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","/Users/MT/Desktop/main 2/insta/client/src/components/ThoughtList/index.js",[],"/Users/MT/Desktop/main 2/insta/client/src/components/CommentList/index.js",[],"/Users/MT/Desktop/main 2/insta/client/src/components/Tile/index.js",["96","97","98","99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":15},{"ruleId":"109","severity":1,"message":"110","line":97,"column":1,"nodeType":"111","messageId":"112","endLine":102,"endColumn":26},{"ruleId":"105","severity":1,"message":"113","line":19,"column":15,"nodeType":"107","messageId":"108","endLine":19,"endColumn":19},{"ruleId":"105","severity":1,"message":"114","line":8,"column":3,"nodeType":"107","messageId":"108","endLine":8,"endColumn":11},{"ruleId":"105","severity":1,"message":"115","line":8,"column":13,"nodeType":"107","messageId":"108","endLine":8,"endColumn":19},{"ruleId":"105","severity":1,"message":"116","line":8,"column":21,"nodeType":"107","messageId":"108","endLine":8,"endColumn":25},{"ruleId":"105","severity":1,"message":"117","line":8,"column":27,"nodeType":"107","messageId":"108","endLine":8,"endColumn":32},{"ruleId":"105","severity":1,"message":"118","line":8,"column":34,"nodeType":"107","messageId":"108","endLine":8,"endColumn":39},{"ruleId":"105","severity":1,"message":"119","line":8,"column":48,"nodeType":"107","messageId":"108","endLine":8,"endColumn":55},{"ruleId":"105","severity":1,"message":"120","line":9,"column":3,"nodeType":"107","messageId":"108","endLine":9,"endColumn":10},{"ruleId":"105","severity":1,"message":"121","line":9,"column":12,"nodeType":"107","messageId":"108","endLine":9,"endColumn":15},{"ruleId":"105","severity":1,"message":"122","line":9,"column":17,"nodeType":"107","messageId":"108","endLine":9,"endColumn":24},{"ruleId":"105","severity":1,"message":"123","line":9,"column":26,"nodeType":"107","messageId":"108","endLine":9,"endColumn":30},{"ruleId":"105","severity":1,"message":"113","line":43,"column":15,"nodeType":"107","messageId":"108","endLine":43,"endColumn":19},{"ruleId":"105","severity":1,"message":"124","line":66,"column":9,"nodeType":"107","messageId":"108","endLine":66,"endColumn":21},{"ruleId":"105","severity":1,"message":"125","line":67,"column":9,"nodeType":"107","messageId":"108","endLine":67,"endColumn":21},{"ruleId":"105","severity":1,"message":"126","line":74,"column":9,"nodeType":"107","messageId":"108","endLine":74,"endColumn":19},{"ruleId":"105","severity":1,"message":"127","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"128","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"129","line":10,"column":10,"nodeType":"107","messageId":"108","endLine":10,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":29,"column":17,"nodeType":"132","endLine":29,"endColumn":47},{"ruleId":"130","severity":1,"message":"131","line":40,"column":25,"nodeType":"132","endLine":40,"endColumn":49},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'userimg' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'data' is assigned a value but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","'Modal' is defined but never used.","'Image' is defined but never used.","'Segment' is defined but never used.","'Divider' is defined but never used.","'Tab' is defined but never used.","'Message' is defined but never used.","'Form' is defined but never used.","'fileInputRef' is assigned a value but never used.","'onFormSubmit' is assigned a value but never used.","'fileChange' is assigned a value but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]