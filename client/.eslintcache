[{"C:\\Users\\Owner\\insta\\client\\src\\index.js":"1","C:\\Users\\Owner\\insta\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Owner\\insta\\client\\src\\App.js":"3","C:\\Users\\Owner\\insta\\client\\src\\pages\\Home.js":"4","C:\\Users\\Owner\\insta\\client\\src\\pages\\Login.js":"5","C:\\Users\\Owner\\insta\\client\\src\\pages\\Signup.js":"6","C:\\Users\\Owner\\insta\\client\\src\\pages\\SingleThought.js":"7","C:\\Users\\Owner\\insta\\client\\src\\pages\\Profile.js":"8","C:\\Users\\Owner\\insta\\client\\src\\components\\Footer\\index.js":"9","C:\\Users\\Owner\\insta\\client\\src\\components\\Header\\index.js":"10","C:\\Users\\Owner\\insta\\client\\src\\utils\\queries.js":"11","C:\\Users\\Owner\\insta\\client\\src\\utils\\auth.js":"12","C:\\Users\\Owner\\insta\\client\\src\\utils\\mutations.js":"13","C:\\Users\\Owner\\insta\\client\\src\\components\\ThoughtForm\\index.js":"14","C:\\Users\\Owner\\insta\\client\\src\\components\\CommentList\\index.js":"15","C:\\Users\\Owner\\insta\\client\\src\\components\\ThoughtList\\index.js":"16","C:\\Users\\Owner\\insta\\client\\src\\components\\CommentForm\\index.js":"17","C:\\Users\\Owner\\insta\\client\\src\\components\\Tile\\index.js":"18"},{"size":543,"mtime":1643024996732,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1643024996735,"results":"21","hashOfConfig":"20"},{"size":2367,"mtime":1643024996711,"results":"22","hashOfConfig":"20"},{"size":1033,"mtime":1643024996734,"results":"23","hashOfConfig":"20"},{"size":4807,"mtime":1643024996734,"results":"24","hashOfConfig":"20"},{"size":4423,"mtime":1643024996735,"results":"25","hashOfConfig":"20"},{"size":1562,"mtime":1643024996735,"results":"26","hashOfConfig":"20"},{"size":1724,"mtime":1643024996734,"results":"27","hashOfConfig":"20"},{"size":891,"mtime":1643024996714,"results":"28","hashOfConfig":"20"},{"size":1570,"mtime":1643024996714,"results":"29","hashOfConfig":"20"},{"size":908,"mtime":1643024996737,"results":"30","hashOfConfig":"20"},{"size":1043,"mtime":1643024996736,"results":"31","hashOfConfig":"20"},{"size":1077,"mtime":1643024996737,"results":"32","hashOfConfig":"20"},{"size":3067,"mtime":1643024996715,"results":"33","hashOfConfig":"20"},{"size":953,"mtime":1643024996713,"results":"34","hashOfConfig":"20"},{"size":517,"mtime":1643024996716,"results":"35","hashOfConfig":"20"},{"size":2397,"mtime":1643024996713,"results":"36","hashOfConfig":"20"},{"size":4802,"mtime":1643024996716,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o3dn4m",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"C:\\Users\\Owner\\insta\\client\\src\\index.js",[],"C:\\Users\\Owner\\insta\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Owner\\insta\\client\\src\\App.js",[],"C:\\Users\\Owner\\insta\\client\\src\\pages\\Home.js",[],"C:\\Users\\Owner\\insta\\client\\src\\pages\\Login.js",[],"C:\\Users\\Owner\\insta\\client\\src\\pages\\Signup.js",[],"C:\\Users\\Owner\\insta\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\Owner\\insta\\client\\src\\pages\\Profile.js",[],"C:\\Users\\Owner\\insta\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\Owner\\insta\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\Owner\\insta\\client\\src\\utils\\queries.js",[],"C:\\Users\\Owner\\insta\\client\\src\\utils\\auth.js",[],"C:\\Users\\Owner\\insta\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Owner\\insta\\client\\src\\components\\ThoughtForm\\index.js",["77"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${characterCount === 280 || error ? 'text-danger' : ''\n              }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","C:\\Users\\Owner\\insta\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\Owner\\insta\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\Users\\Owner\\insta\\client\\src\\components\\CommentForm\\index.js",["78"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${characterCount === 280 || error ? 'text-danger' : ''\n              }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\Owner\\insta\\client\\src\\components\\Tile\\index.js",["79","80","81"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport millie from '../../images/millie.JPG'\nimport im2 from '../../images/im1.png'\nimport { Grid, Card, Icon, Image } from 'semantic-ui-react'\n\nfunction Tile({ thought, showUsername }) {\n    return (\n        <Grid columns='equal'>\n            <Grid.Row columns={3}>\n                <Grid.Column>\n                    <Card key={thought._id}>\n                        <Card.Content>\n                            <Image className=\"ui avatar image\" src={millie} wrapped ui={false} />User Name\n                            {/* <Card.Header>Millie</Card.Header> */}\n                        </Card.Content>\n                        <Image src={im2} wrapped ui={false} />\n                        {/* <Card.Content> */}\n\n                        {/* <Card.Meta>\n                    <span className='date'>Joined in 2015</span>\n                </Card.Meta> */}\n\n                        {/* <Card.Description>\n                    {showUsername ? (\n                        <Link\n                            className=\"text-light\"\n                            to={`/profiles/${thought.thoughtAuthor}`}\n                        >\n                            {thought.thoughtAuthor} <br />\n                            <span style={{ fontSize: '1rem' }}>\n                                had this thought on {thought.createdAt}\n                            </span>\n                        </Link>\n                    ) : (\n                        <>\n                            <span style={{ fontSize: '1rem' }}>\n                                You had this thought on {thought.createdAt}\n                            </span>\n                        </>\n                    )}\n                </Card.Description> */}\n                        {/* </Card.Content> */}\n\n                        <Card.Content extra>\n                            <span className=\"right floated\">\n                                <a>\n                                    <Icon name='like' />4 Likes\n                                </a>\n                            </span>\n                            <a>\n                                <Link className=\"submit button\" to=\"/thoughts/:thoughtId\">\n                                    <Icon name='comment' />4 Comments\n                                </Link>\n\n                            </a>\n                        </Card.Content>\n                        {/* \n            <Card.Content extra>\n\n                <Input placeholder=\"Add Comment...\" />\n\n            </Card.Content> */}\n\n\n                    </Card >\n                </Grid.Column>\n\n\n            </Grid.Row>\n        </Grid >\n\n\n        // <div class=\"ui grid\">\n        //     <div class=\"three column row\">\n        //         <div class=\"column\">\n        //             <div className=\"ui card\" key={thought._id} >\n        //                 <div className=\"content\">\n        //                     <img className=\"ui avatar image\" src={millie}></img>Millie\n        //                 </div>\n        //                 <div className=\"image\">\n        //                     <img src={im2} alt=\"emily\"></img>\n        //                 </div>\n        //                 <div className=\"content\">\n        //                     <span className=\"right floated\">\n        //                         <Icon name='like' />4 Likes\n        //                     </span>\n        //                     <i className=\"comment icon\"></i>\n        //                     3 comments\n        //                 </div>\n        //                 <div className=\"extra content\">\n        //                     <div className=\"ui large transparent left icon input\">\n        //                         <i className=\"heart outline icon\"></i>\n        //                         <input type=\"text\" placeholder=\"Add Comment...\"></input>\n        //                     </div>\n        //                 </div>\n        //             </div>\n        //         </div>\n\n        //     </div>\n        // </div>\n    )\n}\n\nexport default Tile\n\n/* <div className=\"right floated meta\">\n                {showUsername ? (\n                    <Link\n                        className=\"text-light\"\n                        to={`/profiles/${thought.thoughtAuthor}`}\n                    >\n                        {thought.thoughtAuthor} <br />\n                        <span style={{ fontSize: '1rem' }}>\n                            had this thought on {thought.createdAt}\n                        </span>\n                    </Link>\n                ) : (\n                    <>\n                        <span style={{ fontSize: '1rem' }}>\n                            You had this thought on {thought.createdAt}\n                        </span>\n                    </>\n                )}\n            </div> */",{"ruleId":"82","severity":1,"message":"83","line":41,"column":15,"nodeType":"84","messageId":"85","endLine":41,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":19,"column":15,"nodeType":"84","messageId":"85","endLine":19,"endColumn":19},{"ruleId":"82","severity":1,"message":"86","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":47,"column":33,"nodeType":"89","endLine":47,"endColumn":36},{"ruleId":"87","severity":1,"message":"88","line":51,"column":29,"nodeType":"89","endLine":51,"endColumn":32},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]