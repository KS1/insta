[{"/Users/MT/Desktop/main/insta/client/src/index.js":"1","/Users/MT/Desktop/main/insta/client/src/reportWebVitals.js":"2","/Users/MT/Desktop/main/insta/client/src/App.js":"3","/Users/MT/Desktop/main/insta/client/src/pages/SingleThought.js":"4","/Users/MT/Desktop/main/insta/client/src/pages/Profile.js":"5","/Users/MT/Desktop/main/insta/client/src/pages/Home.js":"6","/Users/MT/Desktop/main/insta/client/src/pages/Signup.js":"7","/Users/MT/Desktop/main/insta/client/src/pages/Login.js":"8","/Users/MT/Desktop/main/insta/client/src/components/Header/index.js":"9","/Users/MT/Desktop/main/insta/client/src/components/Footer/index.js":"10","/Users/MT/Desktop/main/insta/client/src/utils/auth.js":"11","/Users/MT/Desktop/main/insta/client/src/utils/mutations.js":"12","/Users/MT/Desktop/main/insta/client/src/utils/queries.js":"13","/Users/MT/Desktop/main/insta/client/src/components/CommentList/index.js":"14","/Users/MT/Desktop/main/insta/client/src/components/CommentForm/index.js":"15","/Users/MT/Desktop/main/insta/client/src/components/ThoughtList/index.js":"16","/Users/MT/Desktop/main/insta/client/src/components/ThoughtForm/index.js":"17","/Users/MT/Desktop/main/insta/client/src/components/Tile/index.js":"18"},{"size":543,"mtime":1642895035867,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1642889569734,"results":"21","hashOfConfig":"20"},{"size":2367,"mtime":1642895036334,"results":"22","hashOfConfig":"20"},{"size":1562,"mtime":1642744670043,"results":"23","hashOfConfig":"20"},{"size":1724,"mtime":1642895034399,"results":"24","hashOfConfig":"20"},{"size":946,"mtime":1642886547251,"results":"25","hashOfConfig":"20"},{"size":4425,"mtime":1642895035348,"results":"26","hashOfConfig":"20"},{"size":4814,"mtime":1642900464528,"results":"27","hashOfConfig":"20"},{"size":1567,"mtime":1642895038173,"results":"28","hashOfConfig":"20"},{"size":891,"mtime":1642833057758,"results":"29","hashOfConfig":"20"},{"size":1043,"mtime":1642895037244,"results":"30","hashOfConfig":"20"},{"size":1077,"mtime":1642895037698,"results":"31","hashOfConfig":"20"},{"size":908,"mtime":1642895036780,"results":"32","hashOfConfig":"20"},{"size":953,"mtime":1642744670042,"results":"33","hashOfConfig":"20"},{"size":2397,"mtime":1642895038649,"results":"34","hashOfConfig":"20"},{"size":514,"mtime":1642900064063,"results":"35","hashOfConfig":"20"},{"size":3067,"mtime":1642895034897,"results":"36","hashOfConfig":"20"},{"size":3174,"mtime":1642900290444,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"acv5kx",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/MT/Desktop/main/insta/client/src/index.js",[],["79","80"],"/Users/MT/Desktop/main/insta/client/src/reportWebVitals.js",[],"/Users/MT/Desktop/main/insta/client/src/App.js",[],"/Users/MT/Desktop/main/insta/client/src/pages/SingleThought.js",[],"/Users/MT/Desktop/main/insta/client/src/pages/Profile.js",[],"/Users/MT/Desktop/main/insta/client/src/pages/Home.js",["81"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ThoughtList from '../components/ThoughtList';\nimport ThoughtForm from '../components/ThoughtForm';\n\nimport { QUERY_THOUGHTS } from '../utils/queries';\nimport Tile from '../components/Tile';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\n  const thoughts = data?.thoughts || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          <ThoughtForm />\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <ThoughtList\n              thoughts={thoughts}\n              title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","/Users/MT/Desktop/main/insta/client/src/pages/Signup.js",["82"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport { Button, Form, Grid, Segment } from 'semantic-ui-react'\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <Segment placeholder>\n        <Grid columns={1} relaxed='very' stackable>\n          <Grid.Column>\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <Form onSubmit={handleFormSubmit}>\n                <Form.Input\n                  icon='user'\n                  iconPosition='left'\n                  label='Username'\n                  // className=\"form-input\"\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <Form.Input\n                  icon='mail'\n                  iconPosition='left'\n                  label='Email'\n                  // className=\"form-input\"\n                  placeholder=\"mia@me.com\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <Form.Input\n                  icon='lock'\n                  iconPosition='left'\n                  label='Password'\n                  type='password'\n                  // className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n\n                <Button content='Sign up' className='mainColor'\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\" />\n              </Form>\n            )}\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n\n          </Grid.Column>\n        </Grid>\n\n      </Segment>\n\n    </div>\n\n  );\n\n\n\n};\n\nexport default Signup;\n\n\n\n{/* <main className=\"flex-row justify-center mb-4\">\n  <div className=\"col-12 col-lg-10\">\n    <div className=\"card\">\n      <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n      <div className=\"card-body\">\n        {data ? (\n          <p>\n            Success! You may now head{' '}\n            <Link to=\"/\">back to the homepage.</Link>\n          </p>\n        ) : (\n          <form onSubmit={handleFormSubmit}>\n            <input\n              className=\"form-input\"\n              placeholder=\"Your username\"\n              name=\"username\"\n              type=\"text\"\n              value={formState.name}\n              onChange={handleChange}\n            />\n            <input\n              className=\"form-input\"\n              placeholder=\"Your email\"\n              name=\"email\"\n              type=\"email\"\n              value={formState.email}\n              onChange={handleChange}\n            />\n            <input\n              className=\"form-input\"\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              value={formState.password}\n              onChange={handleChange}\n            />\n            <button\n              className=\"btn btn-block btn-primary\"\n              style={{ cursor: 'pointer' }}\n              type=\"submit\"\n            >\n              Submit\n            </button>\n          </form>\n        )}\n\n        {error && (\n          <div className=\"my-3 p-3 bg-danger text-white\">\n            {error.message}\n          </div>\n        )}\n      </div>\n    </div>\n  </div>\n</main> */}","/Users/MT/Desktop/main/insta/client/src/pages/Login.js",["83"],"/Users/MT/Desktop/main/insta/client/src/components/Header/index.js",[],"/Users/MT/Desktop/main/insta/client/src/components/Footer/index.js",[],"/Users/MT/Desktop/main/insta/client/src/utils/auth.js",[],"/Users/MT/Desktop/main/insta/client/src/utils/mutations.js",[],"/Users/MT/Desktop/main/insta/client/src/utils/queries.js",[],"/Users/MT/Desktop/main/insta/client/src/components/CommentList/index.js",[],"/Users/MT/Desktop/main/insta/client/src/components/CommentForm/index.js",["84"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${characterCount === 280 || error ? 'text-danger' : ''\n              }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","/Users/MT/Desktop/main/insta/client/src/components/ThoughtList/index.js",["85"],"/Users/MT/Desktop/main/insta/client/src/components/ThoughtForm/index.js",["86"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${characterCount === 280 || error ? 'text-danger' : ''\n              }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","/Users/MT/Desktop/main/insta/client/src/components/Tile/index.js",["87","88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":12},{"ruleId":"97","severity":1,"message":"98","line":115,"column":1,"nodeType":"99","messageId":"100","endLine":169,"endColumn":12},{"ruleId":"93","severity":1,"message":"101","line":6,"column":24,"nodeType":"95","messageId":"96","endLine":6,"endColumn":29},{"ruleId":"93","severity":1,"message":"102","line":19,"column":15,"nodeType":"95","messageId":"96","endLine":19,"endColumn":19},{"ruleId":"93","severity":1,"message":"103","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"102","line":41,"column":15,"nodeType":"95","messageId":"96","endLine":41,"endColumn":19},{"ruleId":"93","severity":1,"message":"104","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"106","line":25,"column":17,"nodeType":"107","endLine":25,"endColumn":20},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Tile' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Input' is defined but never used.","'data' is assigned a value but never used.","'Link' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]